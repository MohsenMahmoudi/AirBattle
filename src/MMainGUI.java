
import java.awt.HeadlessException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Administrator
 */
public class MMainGUI extends javax.swing.JFrame {

    GameM gameobj;
    JLabel imgs[][];

    /**
     * Creates new form MMainGUI
     */
    public MMainGUI() {
        initComponents();
        this.setResizable(false);
        Controller.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImgsLayot = new javax.swing.JLayeredPane();
        GameStup = new javax.swing.JLayeredPane();
        GameDiff = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PlayersCount = new javax.swing.JSlider();
        NextBtn = new javax.swing.JButton();
        Controller = new javax.swing.JLayeredPane();
        Turnlbl = new javax.swing.JLabel();
        upBtn = new javax.swing.JButton();
        DownBtn = new javax.swing.JButton();
        LeftBtn = new javax.swing.JButton();
        RightBtn = new javax.swing.JButton();
        FireMBtn = new javax.swing.JButton();
        FireBBtn = new javax.swing.JButton();
        funcReturnlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        GameStup.setName("GameStup"); // NOI18N

        GameDiff.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy(6-6)", "Medium(9-9)", "Hard(12-12)" }));
        GameDiff.setBounds(150, 50, 150, 22);
        GameStup.add(GameDiff, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setText("Difficulity:");
        jLabel1.setBounds(30, 50, 100, 30);
        GameStup.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Players:");
        jLabel2.setBounds(30, 90, 100, 30);
        GameStup.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PlayersCount.setMaximum(5);
        PlayersCount.setMinimum(2);
        PlayersCount.setValue(3);
        PlayersCount.setBounds(150, 90, 150, 24);
        GameStup.add(PlayersCount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        NextBtn.setText("Next");
        NextBtn.setActionCommand("Nextbtn");
        NextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextBtnActionPerformed(evt);
            }
        });
        NextBtn.setBounds(140, 150, 57, 23);
        GameStup.add(NextBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        GameStup.setBounds(30, 110, 350, 219);
        ImgsLayot.add(GameStup, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Controller.setEnabled(false);
        Turnlbl.setBounds(0, 0, 180, 60);
        Controller.add(Turnlbl, javax.swing.JLayeredPane.DEFAULT_LAYER);

        upBtn.setText("Up");
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });
        upBtn.setBounds(50, 210, 80, 30);
        Controller.add(upBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DownBtn.setText("Down");
        DownBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownBtnActionPerformed(evt);
            }
        });
        DownBtn.setBounds(50, 270, 80, 30);
        Controller.add(DownBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        LeftBtn.setText("Left");
        LeftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftBtnActionPerformed(evt);
            }
        });
        LeftBtn.setBounds(0, 240, 70, 30);
        Controller.add(LeftBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        RightBtn.setText("Right");
        RightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightBtnActionPerformed(evt);
            }
        });
        RightBtn.setBounds(110, 240, 70, 30);
        Controller.add(RightBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        FireMBtn.setText("FireMissle");
        FireMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireMBtnActionPerformed(evt);
            }
        });
        FireMBtn.setBounds(0, 310, 90, 70);
        Controller.add(FireMBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        FireBBtn.setText("FireBomb");
        FireBBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireBBtnActionPerformed(evt);
            }
        });
        FireBBtn.setBounds(90, 310, 90, 70);
        Controller.add(FireBBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        funcReturnlbl.setBounds(0, 70, 180, 140);
        Controller.add(funcReturnlbl, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ImgsLayot, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Controller, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Controller, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(ImgsLayot)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int space = 70;//space =  pagesize / size_rows
    private void NextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextBtnActionPerformed
        // TODO add your handling code here:
        Aircraft tmpac[] = new Aircraft[PlayersCount.getValue()];

        int size_rows = 0, size_cols = 0;
        switch (GameDiff.getSelectedIndex()) {
            case 0:
                size_rows = 6;
                size_cols = 6;
                space = 70;
                break;
            case 1:
                size_rows = 9;
                size_cols = 9;
                space = 50;
                break;
            case 2:
                size_rows = 12;
                size_cols = 12;
                space = 35;
                break;
            default:
                size_rows = 6;
                size_cols = 6;
        }
        for (int i = 0; i < PlayersCount.getValue(); i++) {

            int row, col;
            String name = "";
            try {
                row = Integer.parseInt(JOptionPane.showInputDialog("Enter AirCraft number " + (i + 1) + " x position:"));
                col = Integer.parseInt(JOptionPane.showInputDialog("Enter AirCraft number " + (i + 1) + " y position:"));
                name = JOptionPane.showInputDialog("Enter AirCraft number " + (i + 1) + " Name:");
                if (row > size_rows) {
                    row = (int) ((float) (Math.random() * size_cols));
                }
                if (col > size_cols) {
                    col = i;
                }
            } catch (HeadlessException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "you have entred wrong inputs.\nRandom value will replace");
                row = (int) ((float) (Math.random() * size_cols));
                col = i;
                name = "player_" + i;
            }
            tmpac[i] = new Aircraft(row, col, name, i);
        }
        MapM tmpM = new MapM(size_rows, size_cols);
        tmpM.FillMap();
        gameobj = new GameM(tmpac, tmpM);
        GameStup.setVisible(false);
        imgs = new JLabel[size_rows][size_cols];

        for (int i = 0; i < gameobj.getMap().getRow(); i++) {
            for (int j = 0; j < gameobj.getMap().getCol(); j++) {
                int xpos = j * space, ypos = i * space;
    
                ImgsLayot.setBounds(0, 0, this.getHeight(), this.getWidth());
                ImgsLayot.setSize(this.getHeight(), this.getWidth());
                switch (gameobj.getMap().GetBlock(i, j).getName()) {
                    case 'S':
                        imgs[i][j] = new JLabel(new ImageIcon("Images\\s.jpg"));
                        imgs[i][j].setBounds(xpos, ypos, 20, 20);
                        imgs[i][j].setVisible(true);
                        ImgsLayot.add(imgs[i][j]);
                        break;
                    case 'A':
                        imgs[i][j] = new JLabel(new ImageIcon("Images\\a.jpg"));
                        imgs[i][j].setBounds(xpos, ypos, 20, 20);
                        imgs[i][j].setVisible(true);
                        ImgsLayot.add(imgs[i][j]);
                        break;
                    case 'C':
                        imgs[i][j] = new JLabel(new ImageIcon("Images\\c.jpg"));
                        imgs[i][j].setBounds(xpos, ypos, 20, 20);
                        imgs[i][j].setVisible(true);
                        ImgsLayot.add(imgs[i][j]);
                        break;
                    case 'F':
                        imgs[i][j] = new JLabel(new ImageIcon("Images\\f.jpg"));
                        imgs[i][j].setBounds(xpos, ypos, 20, 20);
                        imgs[i][j].setVisible(true);
                        ImgsLayot.add(imgs[i][j]);
                        break;
                    case 'M':
                        imgs[i][j] = new JLabel(new ImageIcon("Images\\m.jpg"));
                        imgs[i][j].setBounds(xpos, ypos, 20, 20);
                        imgs[i][j].setVisible(true);
                        ImgsLayot.add(imgs[i][j]);
                        break;
                }
                   for (Aircraft ac : gameobj.getAircraftsList()) 
                    if (ac.getX() == i && ac.getY() == j) 
                        imgs[i][j].setIcon(new ImageIcon("Images\\ac.jpg"));
                    
            }
        }

        Controller.setVisible(true);
    }//GEN-LAST:event_NextBtnActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed
        // TODO add your handling code here:
        move('u');
    }//GEN-LAST:event_upBtnActionPerformed

    private void RightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightBtnActionPerformed
        // TODO add your handling code here:
         move('r');
    }//GEN-LAST:event_RightBtnActionPerformed

    private void LeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftBtnActionPerformed
        // TODO add your handling code here:
         move('l');
    }//GEN-LAST:event_LeftBtnActionPerformed

    private void DownBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownBtnActionPerformed
        // TODO add your handling code here:
         move('d');
    }//GEN-LAST:event_DownBtnActionPerformed

    private void FireMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireMBtnActionPerformed
        // TODO add your handling code here:
         move('M');
    }//GEN-LAST:event_FireMBtnActionPerformed

    private void FireBBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireBBtnActionPerformed
        // TODO add your handling code here:
         move('B');
    }//GEN-LAST:event_FireBBtnActionPerformed

    private void move(char move) {

        switch (move) {
            case 'u':
                if (gameobj.function(move)) {
                    funcReturnlbl.setText("done!");
                } else {
                    funcReturnlbl.setText("OPS!");
                }
                break;
            case 'd':
                if (gameobj.function(move)) {
                    funcReturnlbl.setText("done!");
                } else {
                    funcReturnlbl.setText("OPS!");
                }
                break;
            case 'r':
                if (gameobj.function(move)) {
                    funcReturnlbl.setText("done!");
                } else {
                    funcReturnlbl.setText("OPS!");
                }
                break;
            case 'l':
                if (gameobj.function(move)) {
                    funcReturnlbl.setText("done!");
                } else {
                    funcReturnlbl.setText("OPS!");
                }
                break;
            case 'M':
                funcReturnlbl.setText(gameobj.fire('z'));
                break;
            case 'B':
                funcReturnlbl.setText(gameobj.fire('x'));
                break;
        }
        int alives=0;
        for(Aircraft ac : gameobj.getAircraftsList())
            if(ac.isAlive())
                alives++;
        if(gameobj.nextTurn() != null){
            JOptionPane.showMessageDialog(this, "Game Over!\n"+gameobj.nextTurn().getName() + " wins.");
            this.dispose();
        }
            
        
        Turnlbl.setText("Turn: "+gameobj.turn+1);
        repaintscreen();
    }

    private void repaintscreen() {
             for (int i = 0; i < gameobj.getMap().getRow(); i++) {
            for (int j = 0; j < gameobj.getMap().getCol(); j++) {
                int xpos = j * space, ypos = i * space;
 
                ImgsLayot.setBounds(0, 0, this.getHeight(), this.getWidth());
                ImgsLayot.setSize(this.getHeight(), this.getWidth());
                switch (gameobj.getMap().GetBlock(i, j).getName()) {
                    case 'S':
                        imgs[i][j].setIcon(new ImageIcon("Images\\s.jpg"));
                        break;
                    case 'A':
                        imgs[i][j].setIcon(new ImageIcon("Images\\a.jpg"));
                        break;
                    case 'C':
                        imgs[i][j].setIcon(new ImageIcon("Images\\c.jpg"));
                        break;
                    case 'F':
                        imgs[i][j].setIcon(new ImageIcon("Images\\f.jpg"));
                        break;
                    case 'M':
                        imgs[i][j].setIcon(new ImageIcon("Images\\m.jpg"));
                        break;
                }
                
                   for (Aircraft ac : gameobj.getAircraftsList()) 
                    if (ac.getX() == i && ac.getY() == j) 
                        imgs[i][j].setIcon(new ImageIcon("Images\\ac.jpg"));
                    
                
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MMainGUI().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane Controller;
    private javax.swing.JButton DownBtn;
    private javax.swing.JButton FireBBtn;
    private javax.swing.JButton FireMBtn;
    private javax.swing.JComboBox GameDiff;
    private javax.swing.JLayeredPane GameStup;
    private javax.swing.JLayeredPane ImgsLayot;
    private javax.swing.JButton LeftBtn;
    private javax.swing.JButton NextBtn;
    private javax.swing.JSlider PlayersCount;
    private javax.swing.JButton RightBtn;
    private javax.swing.JLabel Turnlbl;
    private javax.swing.JLabel funcReturnlbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton upBtn;
    // End of variables declaration//GEN-END:variables
}
